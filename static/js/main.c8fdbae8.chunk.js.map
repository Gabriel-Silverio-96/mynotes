{"version":3,"sources":["provider/context.tsx","assets/styles/variables.ts","assets/styles/themes/light.ts","assets/styles/themes/dark.ts","assets/styles/global.ts","assets/images/logo-mynotes-light.svg","assets/images/logo-mynotes-dark.svg","components/Header/styled.ts","components/UI/Icons/index.tsx","components/UI/Button/styled.ts","components/UI/Button/index.tsx","components/Header/index.tsx","components/ModalMain/styled.ts","components/ModalMain/index.tsx","components/NoNotes/styled.ts","components/NoNotes/index.tsx","components/UI/NoteCard/styled.ts","components/UI/NoteCard/index.tsx","components/ModalGeneric/styled.ts","components/ModalGeneric/index.tsx","util/useThemeStorage.ts","util/dateNote.ts","page/styled.ts","page/index.tsx","routes.js","index.tsx"],"names":["ContextGlobal","createContext","ContextProvider","props","useState","modalState","setModalState","modalDeleteThisNote","setModalDeleteThisNote","modalDeleteAllNote","setModalDeleteAllNote","modalViewEditNote","setModalViewEditNote","Provider","value","children","primaryColor","secondaryColor","red","grayDark","grayMedium","black","blackLight","white","redLight","textColorParagraph","light","title","colors","primary","secundary","backgroundPrimary","backgroundSecundary","textColorTitle","inputBorder","dark","createGlobalStyle","theme","HeaderContainer","styled","header","IconMoon","xmlns","width","height","viewBox","d","transform","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","IconSun","id","cx","cy","r","y2","x2","y1","IconClose","IconEye","IconTrash","ButtonPrimaryContainer","button","variables","ButtonRoundContainer","deleteButton","scale","ButtonSecodaryContainer","ButtonDeleteContainer","ButtonPrimary","onClick","type","dataModal","ButtonSecodary","ButtonDelete","ButtonRound","Header","React","memo","toggleTheme","themeTitle","thereAreNotes","showModalDeleteAllNote","useContext","src","LogoDark","LogoLight","alt","ModalWrapper","div","ModalContainer","ModalHeader","ModalBody","FormGroupColorContainer","FormGroupColor","FormGroup","ModalFooter","ModalMain","closeModal","e","target","dataset","modal","onSubmit","name","defaultValue","noteEditData","colorNote","onChange","htmlFor","titleNote","titleNoteErro","rows","observation","deleteNote","NoNotesCenter","NoNotesContainer","NoNotes","NoteCardContainer","variable","NoteCardHeader","NoteCardButton","NoteCardBody","NoteCard","length","substr","viewEditNote","showModalDeleteThisNote","ModalGeneric","body","useThemeStorage","key","initialState","storage","localStorage","getItem","JSON","parse","state","setState","useEffect","setItem","stringify","date","Date","day","getDate","month","getMonth","year","getFullYear","dateNote","NoteCardWrapper","section","Index","setTheme","useCallback","idNote","setIdNote","isNewNote","setIsNewNote","setTitleNoteErro","setNoteEditData","newNoteInitialState","newNote","setNewNote","noteStorage","setNoteStorage","Number","className","preventDefault","filter","note","index","storageGet","splice","Math","floor","random","removeItem","map","toString","Router","exact","path","component","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8fdbae8.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\r\nimport { ContextGlobalProps } from \"./types\";\r\n\r\nexport const ContextGlobal = createContext({} as ContextGlobalProps);\r\n\r\nexport const ContextProvider = (props: any) => {\r\n    const [modalState, setModalState] = useState<boolean>(false);\r\n    const [modalDeleteThisNote, setModalDeleteThisNote] = useState<boolean>(false);\r\n    const [modalDeleteAllNote, setModalDeleteAllNote] = useState<boolean>(false);\r\n    const [modalViewEditNote, setModalViewEditNote] = useState<boolean>(false);\r\n\r\n    return (\r\n        <ContextGlobal.Provider value={\r\n            {\r\n                modalState,\r\n                setModalState,\r\n\r\n                modalDeleteThisNote,\r\n                setModalDeleteThisNote,\r\n\r\n                modalDeleteAllNote,\r\n                setModalDeleteAllNote,\r\n\r\n                modalViewEditNote,\r\n                setModalViewEditNote\r\n            }\r\n        }>\r\n            {props.children}\r\n        </ContextGlobal.Provider>\r\n    )\r\n}","//Main colors\r\nexport const primaryColor = \"#9C10FF\";\r\nexport const secondaryColor = \"#FFE210\";\r\n\r\n//Complementary\r\nexport const red = \"#FF0000\";\r\n\r\n//Neutral colors\r\nexport const grayDark = \"#161414\"\r\nexport const grayMedium = \"#EBEBEB\"\r\nexport const grayLight = \"#F8F8F8\";\r\nexport const black = \"#000000\";\r\nexport const blackLight = \"#00000075\";\r\nexport const white = \"#FFFFFF\";\r\nexport const yellowLight = \"#fbea8a\";\r\nexport const redLight = \"#FFE3E3\";\r\nexport const textColorParagraph = \"#929292\"","import { black, grayMedium, primaryColor, secondaryColor, textColorParagraph, white } from \"../variables\"\r\n\r\nconst light = {\r\n    title: \"light\",\r\n\r\n    colors: {\r\n        primary: primaryColor,\r\n        secundary: secondaryColor,\r\n\r\n        backgroundPrimary: white,\r\n        backgroundSecundary: white,\r\n\r\n        textColorTitle: black,\r\n        textColorParagraph: textColorParagraph,\r\n        inputBorder: grayMedium\r\n    }\r\n}\r\n\r\nexport default light","import { black, grayDark, primaryColor, secondaryColor, textColorParagraph, white } from \"../variables\"\r\n\r\nconst dark = {\r\n    title: \"dark\",\r\n\r\n    colors: {\r\n        primary: secondaryColor,\r\n        secundary: primaryColor,\r\n\r\n        backgroundPrimary: black,\r\n        backgroundSecundary: grayDark,\r\n\r\n        textColorTitle: white,\r\n        textColorParagraph: textColorParagraph,\r\n        inputBorder: grayDark\r\n    }\r\n}\r\n\r\nexport default dark","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport default createGlobalStyle `\r\n    * {\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n\r\n    body {\r\n        margin: 0;\r\n        padding: 0;\r\n        font-family: sans-serif;\r\n        box-sizing: border-box;\r\n        background-color: ${props => props.theme.colors.backgroundPrimary};\r\n        font-family: 'Inter', sans-serif;\r\n        padding: 0 1rem;\r\n    }\r\n\r\n    button, h1, h2, h3, h4, h5, h6, textarea, input {\r\n        font-family: 'Inter', sans-serif;\r\n    }\r\n\r\n    [id*=\"describe-\"] {\r\n        display: none;\r\n    }\r\n    \r\n    :focus-visible {\r\n        outline: 0.3rem solid red;\r\n        outline-style: dotted;\r\n    }\r\n`","export default __webpack_public_path__ + \"static/media/logo-mynotes-light.cbef1fe4.svg\";","export default __webpack_public_path__ + \"static/media/logo-mynotes-dark.0ab815da.svg\";","import styled from \"styled-components\";\r\n\r\nexport const HeaderContainer = styled.header`\r\n    background-color: ${props => props.theme.colors.backgroundPrimary};\r\n    padding: 1.5625rem 0;\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    nav {\r\n        display: flex;\r\n        gap: 1rem;\r\n\r\n        button {\r\n            &:nth-child(2n) {\r\n                svg {\r\n                    transform: scale(1.5);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`","import React from 'react';\r\n\r\nconst IconMoon: React.FC = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"19.963\" height=\"19.962\" viewBox=\"0 0 19.963 19.962\">\r\n            <path d=\"M21,12.79A9,9,0,1,1,11.21,3,7,7,0,0,0,21,12.79Z\" transform=\"translate(-2.037 -2)\" fill=\"none\" stroke=\"#000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" />\r\n        </svg>\r\n    );\r\n}\r\n\r\nconst IconSun: React.FC = () => {\r\n    return (\r\n        <svg id=\"Group_35\" data-name=\"Group 35\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\">\r\n            <circle id=\"Ellipse_3\" data-name=\"Ellipse 3\" cx=\"5\" cy=\"5\" r=\"5\" transform=\"translate(7 7)\" fill=\"none\" stroke=\"#000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" />\r\n            <line id=\"Line_2\" y2=\"2\" transform=\"translate(12 1)\" fill=\"none\" stroke=\"#000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" />\r\n            <line id=\"Line_3\" y2=\"2\" transform=\"translate(12 21)\" fill=\"none\" stroke=\"#000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" />\r\n            <line id=\"Line_4\" x2=\"1.42\" y2=\"1.42\" transform=\"translate(4.22 4.22)\" fill=\"none\" stroke=\"#000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" />\r\n            <line id=\"Line_5\" x2=\"1.42\" y2=\"1.42\" transform=\"translate(18.36 18.36)\" fill=\"none\" stroke=\"#000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" />\r\n            <line id=\"Line_6\" x2=\"2\" transform=\"translate(1 12)\" fill=\"none\" stroke=\"#000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" />\r\n            <line id=\"Line_7\" x2=\"2\" transform=\"translate(21 12)\" fill=\"none\" stroke=\"#000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" />\r\n            <line id=\"Line_8\" y1=\"1.42\" x2=\"1.42\" transform=\"translate(4.22 18.36)\" fill=\"none\" stroke=\"#000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" />\r\n            <line id=\"Line_9\" y1=\"1.42\" x2=\"1.42\" transform=\"translate(18.36 4.22)\" fill=\"none\" stroke=\"#000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" />\r\n        </svg>\r\n\r\n    );\r\n}\r\n\r\nconst IconClose: React.FC = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"8.578\" height=\"8.578\" viewBox=\"0 0 8.578 8.578\">\r\n            <path id=\"Path_33\" d=\"M120.578,113l-1-1-3.292,3.292L113,112l-1,1,3.292,3.292L112,119.581l1,1,3.292-3.292,3.292,3.292,1-1-3.292-3.292Z\" transform=\"translate(-112 -112)\" stroke=\"#000\" strokeWidth=\"0\" />\r\n        </svg>\r\n    );\r\n}\r\n\r\nconst IconEye: React.FC = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"13.8\" height=\"10.309\" viewBox=\"0 0 13.8 10.309\">\r\n            <g transform=\"translate(-2.578 -5.011)\">\r\n                <path d=\"M1,8.655S3.327,4,7.4,4s6.4,4.655,6.4,4.655-2.327,4.655-6.4,4.655S1,8.655,1,8.655Z\" transform=\"translate(2.078 1.511)\" fill=\"none\" stroke=\"#000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1\" />\r\n                <circle cx=\"2\" cy=\"2\" r=\"2\" transform=\"translate(7.478 8.166)\" fill=\"none\" stroke=\"#000\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1\" />\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nconst IconTrash: React.FC = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.73\" height=\"11.177\" viewBox=\"0 0 10.73 11.177\">\r\n            <path d=\"M131.241,113.006h-.112a.112.112,0,0,0,.112-.112v.112h4.247v-.112a.112.112,0,0,0,.112.112h-.112v1.006h1.006v-1.118A.9.9,0,0,0,135.6,112H131.13a.9.9,0,0,0-.894.894v1.118h1.006Zm7.042,1.006h-9.836a.447.447,0,0,0-.447.447v.447a.112.112,0,0,0,.112.112h.844l.345,7.307a.9.9,0,0,0,.893.852h6.343a.893.893,0,0,0,.893-.852l.345-7.307h.844a.112.112,0,0,0,.112-.112v-.447A.447.447,0,0,0,138.283,114.012Zm-1.854,8.159H130.3l-.338-7.153h6.8Z\" transform=\"translate(-128 -112)\" fill=\"red\" />\r\n        </svg>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport { IconMoon, IconSun, IconClose, IconEye, IconTrash };\r\n","import styled from \"styled-components\";\r\nimport * as variables from \"assets/styles/variables\";\r\nimport { ButtonRoundContainerProps } from \"./types\";\r\n\r\nexport const ButtonPrimaryContainer = styled.button`\r\n    background-color: ${variables.black};\r\n    color: ${variables.white};\r\n    border: 0.03rem solid ${variables.white};\r\n    font-size: 0.9rem;\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 0.3125rem;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n\r\n    &:hover {\r\n        background-color: ${variables.primaryColor};                \r\n    }\r\n`\r\n\r\nexport const ButtonRoundContainer = styled.button<ButtonRoundContainerProps>`\r\n    background-color: ${props => props.deleteButton ? `${variables.redLight}` : `${variables.grayLight}`};\r\n    border: 0;\r\n    padding: 0.65rem;\r\n    border-radius: 50%;\r\n    height: 2.5rem;\r\n    width: 2.5rem;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n    transform: scale(\r\n        ${props => props.scale}\r\n    );\r\n\r\n    &:hover {\r\n        background-color: ${props => props.deleteButton ? `${variables.red}` : `${variables.yellowLight}`};\r\n        \r\n        svg {\r\n            path {\r\n                fill: ${props => props.deleteButton && `${variables.white}`};\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const ButtonSecodaryContainer = styled.button`\r\n    background-color: transparent;\r\n    color: ${props => props.theme.colors.textColorTitle};\r\n    border: 0.03rem solid ${props => props.theme.colors.textColorTitle};\r\n    font-size: 0.9rem;\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 0.3125rem;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n\r\n    &:hover {\r\n        background-color: ${variables.primaryColor};                \r\n    }\r\n`\r\n\r\nexport const ButtonDeleteContainer = styled.button`\r\n    background-color: ${variables.redLight};\r\n    color: ${variables.red};\r\n    font-size: 0.9rem;\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 0.3125rem;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n    border: 0;\r\n\r\n    &:hover {\r\n        background-color: ${variables.red};  \r\n        color: ${variables.white};              \r\n    }\r\n`","import React from \"react\";\r\nimport { ButtonProps, ButtonRoundProps } from \"./types\";\r\n\r\nimport { ButtonPrimaryContainer, ButtonSecodaryContainer, ButtonRoundContainer, ButtonDeleteContainer } from \"./styled\";\r\nimport { IconTrash } from \"../Icons\";\r\n\r\nconst ButtonPrimary: React.FC<ButtonProps> = ({ title, onClick, type, dataModal }) => {\r\n    return (\r\n        <ButtonPrimaryContainer\r\n            type={type}\r\n            onClick={onClick}\r\n            data-modal={dataModal}\r\n        >\r\n            {title}\r\n        </ButtonPrimaryContainer>\r\n    )\r\n}\r\n\r\nconst ButtonSecodary: React.FC<ButtonProps> = ({ title, onClick, type, dataModal }) => {\r\n    return (\r\n        <ButtonSecodaryContainer\r\n            type={type}\r\n            onClick={onClick}\r\n            data-modal={dataModal}\r\n        >\r\n            {title}\r\n        </ButtonSecodaryContainer>\r\n    )\r\n}\r\n\r\nconst ButtonDelete: React.FC<ButtonProps> = ({ onClick }) => {\r\n    return (\r\n        <ButtonDeleteContainer onClick={onClick}>\r\n            <IconTrash /> Delete\r\n        </ButtonDeleteContainer>\r\n    )\r\n}\r\n\r\nconst ButtonRound: React.FC<ButtonRoundProps> = ({ children, onClick, type, scale, deleteButton, id, dataModal }) => {\r\n    return (\r\n        <ButtonRoundContainer\r\n            type={type}\r\n            onClick={onClick}\r\n            scale={scale}\r\n            deleteButton={deleteButton}\r\n            id={id}\r\n            data-modal={dataModal}\r\n        >\r\n            {children}\r\n        </ButtonRoundContainer>\r\n    )\r\n}\r\n\r\nexport { ButtonPrimary, ButtonSecodary, ButtonRound, ButtonDelete };","import React, { useContext } from \"react\";\r\n\r\n//Assets\r\nimport LogoLight from \"assets/images/logo-mynotes-light.svg\";\r\nimport LogoDark from \"assets/images/logo-mynotes-dark.svg\";\r\nimport { HeaderContainer } from \"./styled\";\r\n\r\n//Components\r\nimport { IconMoon, IconSun, IconTrash } from \"components/UI/Icons\";\r\nimport { ButtonPrimary, ButtonRound } from \"components/UI/Button\";\r\nimport { ContextGlobal } from \"provider/context\";\r\n\r\nimport { HeaderProps } from \"./types\"\r\nimport { ContextGlobalProps } from \"provider/types\";\r\n\r\nconst Header: React.FC<HeaderProps> = React.memo(({ toggleTheme, themeTitle, thereAreNotes, showModalDeleteAllNote }) => {\r\n    const { setModalState, setModalViewEditNote, modalState } = useContext<ContextGlobalProps>(ContextGlobal);\r\n\r\n    const showModal = () => {\r\n        setModalState(!modalState);        \r\n        setModalViewEditNote(false);\r\n    }\r\n\r\n    return (\r\n        <HeaderContainer>\r\n            <img\r\n                src={themeTitle === \"dark\" ? LogoDark : LogoLight}\r\n                alt=\"Logo MyNotes\"\r\n            />\r\n\r\n            <nav>\r\n                <ButtonRound\r\n                    onClick={toggleTheme}\r\n                >\r\n                    {\r\n                        themeTitle === \"dark\"\r\n                            ? <IconSun />\r\n                            : <IconMoon />\r\n                    }\r\n                </ButtonRound>\r\n\r\n                {\r\n                    thereAreNotes && (\r\n                        <ButtonRound deleteButton={true} onClick={showModalDeleteAllNote}>\r\n                            <IconTrash />\r\n                        </ButtonRound>\r\n                    )\r\n                }\r\n\r\n                <ButtonPrimary\r\n                    title=\"New Note\"\r\n                    onClick={showModal}\r\n                />\r\n\r\n            </nav>\r\n        </HeaderContainer>\r\n    )\r\n})\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\nimport * as variables from \"assets/styles/variables\";\r\n\r\nexport const ModalWrapper = styled.div`\r\n    height: 100%;\r\n    width: 100%;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background-color: ${variables.blackLight};  \r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 1;\r\n`\r\n\r\nexport const ModalContainer = styled.div`\r\n    width: 35rem;\r\n    min-height: 15rem;\r\n    padding: 1.5rem;\r\n    background-color: ${props => props.theme.colors.backgroundSecundary};   \r\n    border-radius: 1rem; \r\n`\r\n\r\nexport const ModalHeader = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    \r\n    h2 {\r\n        color: ${props => props.theme.colors.textColorTitle};\r\n    }\r\n\r\n   button {\r\n       svg {\r\n            transform: scale(1.3);\r\n       }\r\n   }\r\n\r\n`\r\n\r\nexport const ModalBody = styled.div`\r\n\r\n`\r\n\r\nexport const FormGroupColorContainer = styled.div`\r\n    margin-top: 1.5rem;\r\n    position: relative;\r\n    width: 30%;\r\n`\r\n\r\nexport const FormGroupColor = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    cursor: pointer;\r\n\r\n    input[type=\"color\"] {\r\n        background-color: transparent;\r\n        border: 0;\r\n        width: 2rem;\r\n        \r\n        &::-webkit-color-swatch-wrapper {\r\n            padding: 0;\r\n            width: 1.8rem;\r\n        }\r\n        &::-webkit-color-swatch {\r\n            height: 1.3rem;\r\n            border-radius: 50%;\r\n            border: 0.2rem solid ${variables.grayMedium};\r\n        }\r\n    }\r\n\r\n    label {\r\n        cursor: pointer;\r\n        color: ${props => props.theme.colors.textColorParagraph};\r\n    }\r\n\r\n`\r\n\r\nexport const FormGroup = styled.div`\r\n    margin-top: 2rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    label {\r\n        color: ${props => props.theme.colors.textColorParagraph};\r\n        margin-bottom: 0.5rem;\r\n    }\r\n\r\n    input {\r\n        padding: 0.6rem 0.5rem;\r\n        border: 0.2rem solid ${props => props.theme.colors.inputBorder};\r\n        border-radius: 0.5rem;\r\n        background-color: transparent;\r\n        font-size: 1rem;\r\n        color: ${props => props.theme.colors.textColorParagraph};\r\n        background-color: ${props => props.theme.colors.backgroundPrimary};\r\n\r\n        &:focus {\r\n            border-color: ${variables.primaryColor};\r\n            outline: 0;            \r\n        }\r\n    }\r\n\r\n    textarea {\r\n        padding: 0.6rem 0.5rem;\r\n        border: 0.2rem solid ${props => props.theme.colors.inputBorder};\r\n        border-radius: 0.5rem;\r\n        background-color: transparent;\r\n        font-size: 1rem;\r\n        color: ${props => props.theme.colors.textColorParagraph};\r\n        background-color: ${props => props.theme.colors.backgroundPrimary};\r\n        resize: vertical;\r\n\r\n        &:focus {\r\n            border-color: ${variables.primaryColor};\r\n            outline: 0;            \r\n        }\r\n    }\r\n\r\n    span {\r\n        color: ${variables.red};\r\n        margin-left: 0.2rem;\r\n        font-size: 0.8rem;\r\n    }\r\n`\r\n\r\nexport const ModalFooter = styled.div`\r\n    margin-top: 2rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    button {\r\n        font-size: 1rem;\r\n    }\r\n`","import React, { useContext } from \"react\";\r\nimport { ContextGlobal } from \"provider/context\";\r\n\r\nimport { ButtonDelete, ButtonPrimary, ButtonRound, ButtonSecodary } from \"components/UI/Button\";\r\nimport { IconClose } from \"components/UI/Icons\";\r\n\r\nimport {\r\n    ModalWrapper,\r\n    ModalContainer,\r\n    ModalHeader,\r\n    ModalBody,\r\n    FormGroupColor,\r\n    FormGroupColorContainer,\r\n    FormGroup,\r\n    ModalFooter\r\n} from \"./styled\";\r\n\r\nimport { ModalMainProps } from \"./types\";\r\nimport { ContextGlobalProps } from \"provider/types\";\r\n\r\nconst ModalMain: React.FC<ModalMainProps<HTMLInputElement | HTMLTextAreaElement>> = React.memo((props) => {\r\n    const { modalState, setModalState, modalViewEditNote } = useContext<ContextGlobalProps>(ContextGlobal);\r\n\r\n    const closeModal = (e: any) => {\r\n        const dataModal = e.target.dataset.modal\r\n\r\n        if(dataModal === \"close\") {            \r\n            setModalState(!modalState)\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <ModalWrapper onClick={closeModal} data-modal=\"close\">\r\n            <ModalContainer>\r\n\r\n                <ModalHeader>\r\n                    <h2>\r\n                        {\r\n                            modalViewEditNote\r\n                                ? \"Edit note\"\r\n                                : \"View note\"\r\n                        }\r\n                    </h2>\r\n                    <ButtonRound\r\n                        scale=\"0.8\"\r\n                        onClick={closeModal}\r\n                        dataModal=\"close\"\r\n                    >\r\n                        <IconClose />\r\n                    </ButtonRound>\r\n                </ModalHeader>\r\n\r\n                <form onSubmit={props.onSubmit}>\r\n                    <ModalBody>\r\n                        <FormGroupColorContainer>\r\n                            <FormGroupColor>\r\n                                <input\r\n                                    type=\"color\"\r\n                                    name=\"colorNote\"\r\n                                    id=\"colorNote\"\r\n                                    defaultValue={modalViewEditNote ? props.noteEditData.colorNote : \"#9C10FF\"}\r\n                                    onChange={props.onChange}\r\n                                />\r\n                                <label htmlFor=\"colorNote\">Color note</label>\r\n                            </FormGroupColor>\r\n                        </FormGroupColorContainer>\r\n\r\n                        <FormGroup>\r\n                            <label htmlFor=\"titleNote\">Title note</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"titleNote\"\r\n                                id=\"titleNote\"\r\n                                onChange={props.onChange}\r\n                                defaultValue={modalViewEditNote ? props.noteEditData.titleNote : \"\"}\r\n                            />\r\n                            <span>{props.titleNoteErro}</span>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <label htmlFor=\"observation\">Observation</label>\r\n                            <textarea\r\n                                name=\"observation\"\r\n                                id=\"observation\"\r\n                                rows={10}\r\n                                onChange={props.onChange}\r\n                                defaultValue={modalViewEditNote ? props.noteEditData.observation : \"\"}\r\n                            />\r\n                        </FormGroup>\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter>\r\n                        {\r\n                            modalViewEditNote\r\n                                ? <ButtonDelete onClick={props.deleteNote} />\r\n                                : (\r\n                                    <ButtonSecodary\r\n                                        title=\"Close\"\r\n                                        onClick={closeModal}\r\n                                        dataModal=\"close\"\r\n                                    />\r\n                                )\r\n                        }\r\n\r\n                        <ButtonPrimary\r\n                            title=\"Save\"\r\n                            type=\"submit\"\r\n                        />\r\n                    </ModalFooter>\r\n                </form>\r\n            </ModalContainer>\r\n        </ModalWrapper>\r\n    )\r\n}\r\n)\r\n\r\nexport default ModalMain;","import styled from \"styled-components\";\r\n\r\nexport const NoNotesCenter = styled.div`\r\n    width: 100%;\r\n    height: 60vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    grid-column: 1 / -1;\r\n`\r\n\r\nexport const NoNotesContainer = styled.div`\r\n    text-align: center;\r\n\r\n    span {\r\n        font-size: 3rem;\r\n    }\r\n\r\n    h1 {\r\n        font-size: 2.625rem;\r\n        font-weight: 800;               \r\n        margin: 1rem 0;\r\n        color: ${props => props.theme.colors.textColorTitle};\r\n    }\r\n\r\n    p {\r\n        color: ${props => props.theme.colors.textColorParagraph};\r\n    }\r\n`","import React from \"react\";\r\n\r\nimport { NoNotesContainer, NoNotesCenter } from \"./styled\";\r\n\r\nconst NoNotes: React.FC = () => {\r\n    return (\r\n        <NoNotesCenter>\r\n            <NoNotesContainer>\r\n                <span>😄</span>\r\n                <h1>You didn't create<br/>any notes</h1>\r\n                <p>Create a new note</p>\r\n            </NoNotesContainer>\r\n        </NoNotesCenter>\r\n\r\n    );\r\n}\r\n\r\nexport default NoNotes;\r\n","import styled from \"styled-components\";\r\nimport * as variable from \"assets/styles/variables\";\r\nimport { NoteCardContainerProps } from \"./types\";\r\n\r\nexport const NoteCardContainer = styled.div<NoteCardContainerProps>`\r\n    padding: 1rem;\r\n    background-color: ${props => props.theme.colors.backgroundSecundary};\r\n    min-height: 10rem;\r\n    border-radius: 0.5rem;\r\n    border: 0.09rem solid ${variable.black};\r\n    border-top-color: ${variable.black};    \r\n    border-left-color: ${variable.black};\r\n    border-right-color: ${variable.black};\r\n    cursor: pointer;\r\n\r\n    border-bottom: 0.3rem solid ${props => props.colorNote};\r\n\r\n    h3 {\r\n        color: ${props => props.theme.colors.textColorTitle};\r\n    }\r\n\r\n    &:hover {\r\n        & > div > div {\r\n            opacity: 1;\r\n        }\r\n    }\r\n`\r\nexport const NoteCardHeader = styled.div`\r\n    position: relative;\r\n`\r\n\r\nexport const NoteCardButton = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    position: absolute;\r\n    top: -5px;\r\n    right: 0;\r\n    width: 100%;\r\n    background: red;\r\n    justify-content: flex-end;\r\n    opacity: 0;\r\n    transition: 0.3s;\r\n\r\n    background: linear-gradient(\r\n            90deg, rgba(255,0,0,0) 0%, \r\n            ${props => props.theme.colors.backgroundSecundary} 100%\r\n        );\r\n\r\n    button {\r\n        svg {\r\n            transform: scale(1.5);\r\n        }\r\n    }\r\n`\r\n\r\nexport const NoteCardBody = styled.div`\r\n    margin-top: 2rem;\r\n\r\n    p {\r\n        color: ${props => props.theme.colors.textColorParagraph};\r\n        font-size: 0.9rem;        \r\n    }\r\n`\r\n","import React from \"react\";\r\n\r\nimport { ButtonRound } from \"components/UI/Button\";\r\n\r\nimport { NoteCardContainer, NoteCardHeader, NoteCardButton, NoteCardBody } from \"./styled\";\r\n\r\nimport { NoteCardProps } from \"./types\";\r\nimport { IconEye, IconTrash } from \"../Icons\";\r\n\r\nconst NoteCard: React.FC<NoteCardProps> = (props) => {\r\n    return (\r\n        <NoteCardContainer colorNote={props.colorNote}>\r\n            <NoteCardHeader>\r\n                <h3>\r\n                    {\r\n                        props.titleNote.length > 40\r\n                            ? `${props.titleNote.substr(0, 40)}...`\r\n                            : props.titleNote\r\n                    }\r\n\r\n                </h3>\r\n\r\n                <NoteCardButton>\r\n                    <ButtonRound scale=\"0.7\" onClick={props.viewEditNote}>\r\n                        <IconEye />\r\n                    </ButtonRound>\r\n\r\n                    <ButtonRound scale=\"0.7\"\r\n                        deleteButton={true}\r\n                        onClick={props.showModalDeleteThisNote}\r\n                        id={props.id}\r\n                    >\r\n                        <IconTrash />\r\n                    </ButtonRound>\r\n                </NoteCardButton>\r\n            </NoteCardHeader>\r\n\r\n            <NoteCardBody>\r\n                <p>\r\n                    {\r\n                        props.observation.length > 130\r\n                            ? `${props.observation.substr(0, 130)}...`\r\n                            : props.observation\r\n                    }\r\n                </p>\r\n            </NoteCardBody>\r\n\r\n        </NoteCardContainer>\r\n    );\r\n}\r\n\r\nexport default NoteCard;\r\n","import styled from \"styled-components\";\r\nimport * as variables from \"assets/styles/variables\";\r\n\r\nexport const ModalWrapper = styled.div`\r\n    height: 100%;\r\n    width: 100%;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    background-color: ${variables.blackLight};  \r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 1;\r\n`\r\n\r\nexport const ModalContainer = styled.div`\r\n    width: 25rem;\r\n    min-height: 9rem;\r\n    padding: 1.5rem;\r\n    background-color: ${props => props.theme.colors.backgroundSecundary};   \r\n    border-radius: 1rem; \r\n`\r\n\r\nexport const ModalHeader = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    \r\n    h2 {\r\n        color: ${props => props.theme.colors.textColorTitle};\r\n    }\r\n\r\n   button {\r\n       svg {\r\n            transform: scale(1.3);\r\n       }\r\n   }\r\n\r\n`\r\n\r\nexport const ModalBody = styled.div`\r\n    p {\r\n        margin-top: 1rem;\r\n        color: ${props => props.theme.colors.textColorParagraph};\r\n    }\r\n\r\n`\r\n\r\nexport const FormGroupColorContainer = styled.div`\r\n    margin-top: 1.5rem;\r\n    position: relative;\r\n    width: 30%;\r\n`\r\n\r\nexport const FormGroupColor = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    cursor: pointer;\r\n\r\n    input[type=\"color\"] {\r\n        background-color: transparent;\r\n        border: 0;\r\n        width: 2rem;\r\n        \r\n        &::-webkit-color-swatch-wrapper {\r\n            padding: 0;\r\n            width: 1.8rem;\r\n        }\r\n        &::-webkit-color-swatch {\r\n            height: 1.3rem;\r\n            border-radius: 50%;\r\n            border: 0.2rem solid ${variables.grayMedium};\r\n        }\r\n    }\r\n\r\n    label {\r\n        cursor: pointer;\r\n        color: ${props => props.theme.colors.textColorParagraph};\r\n    }\r\n\r\n`\r\n\r\nexport const FormGroup = styled.div`\r\n    margin-top: 2rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    label {\r\n        color: ${props => props.theme.colors.textColorParagraph};\r\n        margin-bottom: 0.5rem;\r\n    }\r\n\r\n    input {\r\n        padding: 0.6rem 0.5rem;\r\n        border: 0.2rem solid ${props => props.theme.colors.inputBorder};\r\n        border-radius: 0.5rem;\r\n        background-color: transparent;\r\n        font-size: 1rem;\r\n        color: ${props => props.theme.colors.textColorParagraph};\r\n        background-color: ${props => props.theme.colors.backgroundPrimary};\r\n\r\n        &:focus {\r\n            border-color: ${variables.primaryColor};\r\n            outline: 0;            \r\n        }\r\n    }\r\n\r\n    textarea {\r\n        padding: 0.6rem 0.5rem;\r\n        border: 0.2rem solid ${props => props.theme.colors.inputBorder};\r\n        border-radius: 0.5rem;\r\n        background-color: transparent;\r\n        font-size: 1rem;\r\n        color: ${props => props.theme.colors.textColorParagraph};\r\n        background-color: ${props => props.theme.colors.backgroundPrimary};\r\n        resize: vertical;\r\n\r\n        &:focus {\r\n            border-color: ${variables.primaryColor};\r\n            outline: 0;            \r\n        }\r\n    }\r\n`\r\n\r\nexport const ModalFooter = styled.div`\r\n    margin-top: 2rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    button {\r\n        font-size: 1rem;\r\n    }\r\n`","import React from \"react\";\r\n\r\nimport { ButtonPrimary, ButtonRound, ButtonSecodary } from \"components/UI/Button\";\r\nimport { IconClose } from \"components/UI/Icons\";\r\n\r\nimport {\r\n    ModalWrapper,\r\n    ModalContainer,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n} from \"./styled\";\r\n\r\nimport { ModalGenericProps } from \"./types\";\r\n\r\nconst ModalGeneric: React.FC<ModalGenericProps> = React.memo(({ onClick, title, body, closeModal }) => {  \r\n    return (\r\n        <ModalWrapper>\r\n            <ModalContainer>\r\n                <ModalHeader>\r\n                    <h2>\r\n                        {title}\r\n                    </h2>\r\n                    <ButtonRound\r\n                        scale=\"0.8\"\r\n                        onClick={closeModal}\r\n                    >\r\n                        <IconClose />\r\n                    </ButtonRound>\r\n                </ModalHeader>\r\n\r\n                <ModalBody>\r\n                    <p>\r\n                        {body}\r\n                    </p>\r\n                </ModalBody>\r\n\r\n                <ModalFooter>\r\n                    <ButtonSecodary\r\n                        title=\"No\"\r\n                        onClick={closeModal}\r\n                    />\r\n                    <ButtonPrimary\r\n                        title=\"Yes\"\r\n                        onClick={onClick}\r\n                    />\r\n\r\n                </ModalFooter>\r\n            </ModalContainer>\r\n        </ModalWrapper>\r\n    )\r\n}\r\n)\r\n\r\nexport default ModalGeneric;","import { useState, useEffect, Dispatch, SetStateAction } from \"react\";\r\n\r\ntype useThemeStorageProps<T> = [\r\n    T,\r\n    Dispatch<SetStateAction<T>>\r\n]\r\n\r\nfunction useThemeStorage<T>(key: string, initialState: T): useThemeStorageProps<T> {\r\n    const [state, setState] = useState(() => {\r\n        const storage = localStorage.getItem(key);\r\n\r\n        if(storage) {\r\n            return JSON.parse(storage)\r\n        } else {\r\n            return initialState\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(key, JSON.stringify(state))\r\n    }, [key, state])\r\n\r\n    return [state, setState]\r\n}\r\n\r\nexport default useThemeStorage;","const date = new Date()\r\nconst day = date.getDate();\r\nconst month = date.getMonth() + 1;\r\nconst year = date.getFullYear();\r\nconst dateNote = `${day < 10 ? \"0\" + day : day}/${month < 10 ? \"0\" + month : month}/${year}`;\r\n\r\nexport default dateNote;","import styled from \"styled-components\";\r\n\r\nexport const NoteCardWrapper = styled.section`\r\n    display: grid;  \r\n    grid-template-columns: repeat(5, 1fr);\r\n    gap: 1rem;\r\n\r\n    @media (min-width: 1920px) {\r\n        grid-template-columns: repeat(8, 1fr) !important;\r\n    }\r\n\r\n    @media (min-width: 1400px) {\r\n        grid-template-columns: repeat(6, 1fr);\r\n    }\r\n\r\n    @media (max-width: 992px) {\r\n        grid-template-columns: repeat(4, 1fr);\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        grid-template-columns: repeat(3, 1fr);\r\n    }\r\n\r\n    @media (max-width: 576px) {\r\n        grid-template-columns: repeat(1, 1fr);\r\n    }\r\n`\r\n","import React, { useEffect, useState, useContext, useCallback, ChangeEvent, FormEvent } from \"react\";\r\nimport { ContextGlobal } from \"../provider/context\";\r\n\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport light from \"assets/styles/themes/light\";\r\nimport dark from \"assets/styles/themes/dark\";\r\nimport GlobalStyles from \"assets/styles/global\";\r\n\r\nimport Header from \"../components/Header/index\";\r\nimport ModalMain from \"../components/ModalMain\";\r\nimport NoNotes from \"components/NoNotes\";\r\nimport NoteCard from \"components/UI/NoteCard\";\r\nimport ModalGeneric from \"components/ModalGeneric\";\r\n\r\nimport useThemeStorage from \"util/useThemeStorage\";\r\nimport dateNote from \"util/dateNote\";\r\n\r\nimport { NoteCardWrapper } from \"./styled\";\r\nimport { NoteProps } from \"./types\";\r\nimport { ContextGlobalProps } from \"provider/types\";\r\n\r\nconst Index: React.FC = () => {\r\n  const {\r\n    modalState,\r\n    setModalState,\r\n    modalDeleteThisNote,\r\n    setModalDeleteThisNote,\r\n    modalDeleteAllNote,\r\n    setModalDeleteAllNote,\r\n    modalViewEditNote,\r\n    setModalViewEditNote\r\n  } = useContext<ContextGlobalProps>(ContextGlobal);\r\n\r\n  const [theme, setTheme] = useThemeStorage(\"theme\", light);\r\n  const toggleTheme = useCallback(() => {\r\n    setTheme(theme.title === \"light\" ? dark : light);\r\n  }, [theme, setTheme])\r\n\r\n  const [idNote, setIdNote] = useState<number>(0);\r\n  const [isNewNote, setIsNewNote] = useState<boolean>(false);\r\n  const [titleNoteErro, setTitleNoteErro] = useState<string>(\"\");\r\n  const [noteEditData, setNoteEditData] = useState({} as NoteProps)\r\n\r\n  const newNoteInitialState = {\r\n    id: 0,\r\n    colorNote: \"#9C10FF\",\r\n    titleNote: \"\",\r\n    observation: \"\",\r\n    date: dateNote,\r\n  }\r\n\r\n  const [newNote, setNewNote] = useState<NoteProps>(newNoteInitialState);\r\n\r\n  const storage = JSON.parse(localStorage.getItem(\"notes\") || \"[]\");\r\n  const [noteStorage, setNoteStorage] = useState<Array<NoteProps>>(storage);\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    if (!modalViewEditNote) {\r\n      setNewNote({\r\n        ...newNote,\r\n        id: Math.floor(Math.random() * 1000),\r\n        [e.target.name]: e.target.value\r\n      })\r\n    } else {\r\n      setNoteEditData({\r\n        ...noteEditData,\r\n        [e.target.name]: e.target.value\r\n      })\r\n    }\r\n  }\r\n\r\n  const saveNote = (e: FormEvent<HTMLFormElement>): void => {\r\n    e.preventDefault();\r\n\r\n    if (!modalViewEditNote) {\r\n      if (newNote.titleNote === \"\") {\r\n        setTitleNoteErro(\"Add title\");\r\n      } else {\r\n        setTitleNoteErro(\"\")\r\n\r\n        const storage = JSON.parse(localStorage.getItem(\"notes\") || \"[]\");\r\n        if (storage !== null) {\r\n          localStorage.setItem(\"notes\", JSON.stringify([...storage, newNote]))\r\n        } else {\r\n          localStorage.setItem(\"notes\", JSON.stringify([newNote]))\r\n        }\r\n\r\n        setModalState(!modalState);\r\n        setNewNote(newNoteInitialState);\r\n        setIsNewNote(!isNewNote);\r\n      }\r\n\r\n    } else {\r\n\r\n      if (noteEditData.titleNote === \"\") {\r\n        setTitleNoteErro(\"Add title\");\r\n      } else {\r\n        setTitleNoteErro(\"\")\r\n\r\n        noteStorage.filter((note: NoteProps, index: number) => {\r\n          if (note.id === Number(idNote)) {\r\n            const storageGet = JSON.parse(localStorage.getItem(\"notes\") || \"[]\");\r\n            storageGet.splice(index, 1, noteEditData)\r\n\r\n            localStorage.setItem(\"notes\", JSON.stringify(storageGet));\r\n            setIsNewNote(!isNewNote);\r\n            setModalState(!modalState);\r\n          }\r\n\r\n          return true\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const storage = JSON.parse(localStorage.getItem(\"notes\") || \"[]\");\r\n    return setNoteStorage(storage)\r\n  }, [isNewNote]);\r\n\r\n  useEffect(() => {\r\n    if(titleNoteErro !== \"\" && !modalState) {\r\n      setTitleNoteErro(\"\")\r\n    }\r\n  }, [modalState, titleNoteErro])\r\n\r\n  const showModalDeleteThisNote = (idNote: number) => {\r\n    setModalDeleteThisNote(!modalDeleteAllNote);\r\n    setIdNote(Number(idNote));\r\n    setModalState(false);\r\n  }\r\n\r\n  const showModalDeleteAllNote = () => {\r\n    setModalDeleteAllNote(true);\r\n  }\r\n\r\n  const closeModalDeleteThisNote = () => {\r\n    setModalDeleteThisNote(!modalDeleteThisNote)\r\n  }\r\n\r\n  const closeModalDeleteAllNote = () => {\r\n    setModalDeleteAllNote(!modalDeleteAllNote)\r\n  }\r\n\r\n  const deleteAllNotes = () => {\r\n    localStorage.removeItem(\"notes\");\r\n    setNoteStorage([]);\r\n    setModalDeleteAllNote(!modalDeleteAllNote)\r\n  }\r\n\r\n  const deleteThisNote = () => {\r\n    noteStorage.filter((note: NoteProps, index: number) => {\r\n      if (note.id === idNote) {\r\n        storage.splice(index, 1);\r\n        localStorage.setItem(\"notes\", JSON.stringify([...storage]));\r\n\r\n        setNoteStorage(storage);\r\n        setModalDeleteThisNote(!modalDeleteThisNote);\r\n      }\r\n\r\n      return true\r\n    })\r\n  }\r\n\r\n  const showModalVieEditNote = (id: number) => {\r\n    setModalViewEditNote(true);\r\n    setModalState(!modalState);\r\n\r\n    noteStorage.filter((note: NoteProps, index: number) => {\r\n      if (note.id === Number(id)) {\r\n        setNoteEditData(note)\r\n        setIdNote(note.id);\r\n      }\r\n\r\n      return true\r\n    })\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyles />\r\n      <div className=\"container\">\r\n        <Header\r\n          toggleTheme={toggleTheme}\r\n          themeTitle={theme.title}\r\n          thereAreNotes={noteStorage === null || noteStorage.length === 0 ? false : true}\r\n          showModalDeleteAllNote={showModalDeleteAllNote}\r\n        />\r\n\r\n        {\r\n          modalState && (\r\n            <ModalMain\r\n              onSubmit={saveNote}\r\n              onChange={handleChange}\r\n              noteEditData={noteEditData}\r\n              deleteNote={() => showModalDeleteThisNote(Number(idNote))}\r\n              titleNoteErro={titleNoteErro}\r\n            />\r\n          )\r\n        }\r\n\r\n        {\r\n          modalDeleteThisNote && (\r\n            <ModalGeneric\r\n              title=\"Delete note\"\r\n              body=\"Do you want to delete this note?\"\r\n              onClick={deleteThisNote}\r\n              closeModal={closeModalDeleteThisNote}\r\n            />\r\n          )\r\n        }\r\n\r\n        {\r\n          modalDeleteAllNote && (\r\n            <ModalGeneric\r\n              title=\"Delete all note\"\r\n              body=\"Do you want to delete all note?\"\r\n              onClick={deleteAllNotes}\r\n              closeModal={closeModalDeleteAllNote}\r\n            />\r\n          )\r\n        }\r\n\r\n        <NoteCardWrapper>\r\n          {noteStorage.length > 0 ?\r\n            noteStorage.map((note: NoteProps, index: number) => (\r\n              <NoteCard\r\n                key={index}\r\n                id={note.id.toString()}\r\n                colorNote={note.colorNote}\r\n                titleNote={note.titleNote}\r\n                observation={note.observation}\r\n                showModalDeleteThisNote={() => showModalDeleteThisNote(note.id)}\r\n                viewEditNote={() => showModalVieEditNote(note.id)}\r\n              />\r\n            )) : (\r\n              <NoNotes />\r\n            )}\r\n        </NoteCardWrapper>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default Index;","import React from 'react';\r\nimport {BrowserRouter, Switch, Route, Redirect} from 'react-router-dom';\r\n\r\n//pages\r\nimport Index from './page';\r\n\r\nexport default function Router() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Index} />\r\n                <Route path=\"/mynotes\" component={Index} />\r\n                <Route path=\"*\" component={Index}>\r\n                    <Redirect to=\"/mynotes\" />\r\n                </Route>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Routes from \"./routes\";\r\n\r\nimport { ContextProvider } from \"./provider/context\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ContextProvider>      \r\n      <Routes />\r\n    </ContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}